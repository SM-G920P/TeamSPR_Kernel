#!/sbin/sh

cat << CTAG
{
    name:"A57 CPU",
    elements:[
        { SLiveLabel:{
		title:"CPU temperature",
		description:" Temperature sensor data as read from the A57 cores. The A53 cores do not have dedicated sensors.",
		refresh:500,
		action:"echo \$(echo \$(cat /sys/devices/10060000.tmu/curr_temp | tr , \"\\n\") | { read C4 C5 C6 C7; echo \"Core 4: \${C4}째C@nCore 5: \${C5}째C@nCore 6: \${C6}째C@nCore 7: \${C7}째C\"; })"
          }},
  	{ SSpacer:{
  		height:1

        }},
	{ SSpacer:{
		height:1
	}},
        { STitleBar:{
                title:"A57 big Cores Frequency Scaling"
        }},
	{ SDescription:{
		description:" Note: Settings may automatically change due to Samsung DVFS. For better control, suggest to disable DVFS using Xposed DVFS Disabler app. WARNING: Not all frequencies outside defaults may be stable for your device!"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SLiveLabel:{
                  title:"A57 big Cores live frequency",
                  refresh:500,
                  action:"live LiveCPUFrequency_big"
        }},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
       		title:"A57 big Cores MAX frequency",
		description:" Set the maximum frequency the CPU scales up to.\n",
		default:2100000,
		action:"generic /sys/devices/system/cpu/cpu4/cpufreq/ren_max_freq",
		values:{
`
			for FREQ in $(cat /sys/devices/system/cpu/cpufreq/mp-cpufreq/cluster1_freq_table); do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL} MHz\", "
			done
`
		}
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
       		title:"A57 big Cores MIN frequency",
		description:" Set the minimum frequency the CPU scales down to.\n",
		default:800000,
		action:"generic /sys/devices/system/cpu/cpu4/cpufreq/scaling_min_freq",
		values:{
`
			for FREQ in $(cat /sys/devices/system/cpu/cpufreq/mp-cpufreq/cluster1_freq_table); do
				LABEL=$(expr $FREQ / 1000)
				echo "$FREQ:\"${LABEL} MHz\", "
			done
`
		}
	}},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:"A57 big Cores CPU Governor",
		description:" The CPU governor determines how the CPU behaves in response to changes in workload."
        }},
	{ SSpacer:{
		height:1
	}},
        { SOptionList:{
		title:"Current governor",
                default:`cat /sys/devices/system/cpu/cpu4/cpufreq/scaling_governor`,
                action:"governor /sys/devices/system/cpu/cpu4/cpufreq/scaling_governor",
                values:[
`
                        for GOVERNOR in \`cat /sys/devices/system/cpu/cpu4/cpufreq/scaling_available_governors\` ; do
                                echo "\"$GOVERNOR\","
                        done
`
                ],
		notify:[
			{
				on:APPLY,
				do:[ REFRESH, CANCEL ],
				to:"/sys/devices/system/cpu/cpu4/cpufreq"
			},
			{
				on:REFRESH,
				do:REFRESH,
				to:"/sys/devices/system/cpu/cpu4/cpufreq"
			}
		]
        }},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:"Governor tunables",
		description:" The various configuration items which are governor-dependent."
        }},
	{ SSpacer:{
		height:1
	}},
	{ STreeDescriptor:{
		path:"/sys/devices/system/cpu/cpu4/cpufreq",
		generic: {
			directory: {
				STreeDescriptor:{
					generic: {
						directory: {},
						element: {
							SGeneric: { title:"@BASENAME" }
						}
					},
					exclude: [
						"above_hispeed_delay",
						"boostpulse",
						"cpu_util",
						"hispeed_freq",
						"mode",
						"sampling_rate_min",
						"target_loads"
					]
				},
			}
		},
		exclude: [
			"affected_cpus",
			"cpuinfo_cur_freq",
			"cpuinfo_max_freq",
			"cpuinfo_min_freq",
			"cpuinfo_transition_latency",
			"related_cpus",
			"scaling_available_governors",
			"scaling_cur_freq",
			"scaling_driver",
			"scaling_governor",
			"scaling_max_freq",
			"scaling_min_freq",
			"scaling_setspeed",
                        "stats"
		]
	}},
	{ SSpacer:{
		height:1
	}},
    ]
}
CTAG
