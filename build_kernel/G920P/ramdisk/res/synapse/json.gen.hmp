#!/sbin/busybox sh

cat << CTAG
{
    name:CPU MULTICORE,
    elements:[
        { SPane:{
                title:"HMP Thresholds up/down ratios for task migrating",
                description:" Adjust HMP ratios for up/down scaling for tasks migrating from LITTLE > big domain and from big > LITTLE domain. Higher up-thresholds value use less battery because use more Little domain."
        }},
	{ SSpacer:{
		height:1
	}},
        { SSeekBar:{
                title:"HMP UP Thresholds",
                description:"",
                min:1, max:1000, unit:"", step:1,
                default:`cat /sys/kernel/hmp/up_threshold`,
                action:"generic /sys/kernel/hmp/up_threshold"
        }},
	{ SSpacer:{
		height:1
	}},
        { SSeekBar:{
                title:"HMP DOWN Thresholds",
                description:"",
                min:1, max:512, unit:"", step:1,
                default:`cat /sys/kernel/hmp/down_threshold`,
                action:"generic /sys/kernel/hmp/down_threshold"
        }},
	{ SSpacer:{
		height:1
	}},
        { SPane:{
                title:"Power Aware Scheduling",
                description:" Power aware scheduling is a CPU capacity managing 'power scheduler' which lives by the side of the existing process scheduler. Its role is to monitor the system load and decide which cpus that should be available to the process scheduler. It will basically attempt to “pack” small tasks into the “leftmost” CPU cores (ie. starting cpu0) to keep the other CPU cores as idle as possible, instead of spreading them evenly across all online cores. Theoretically this should increase power efficiency, with a very small cost to performance."
        }},
	{ SSpacer:{
		height:1
	}},
	{ SCheckBox:{
		description:" Default is Disabled.\n",
                title:"Enable Power Aware Scheduling",
                default:`cat /sys/kernel/hmp/power_migration`,
                action:"generic /sys/kernel/hmp/power_migration",
	}},
	{ SSpacer:{
		height:1
	}},
        { SPane:{
                title:"HMP LITTLE Packing",
                description:" Allows the HMP Scheduler to pack small tasks into CPUs in the smallest HMP domain. Power savings at a slight cost to performance."
        }},
	{ SSpacer:{
		height:1
	}},
	{ SCheckBox:{
		description:" Default is Disabled.\n",
		label:"Enable HMP LITTLE Packing",
		default:`cat /sys/kernel/hmp/packing_enable`,
                action:"generic /sys/kernel/hmp/packing_enable"
	}},
	{ SSpacer:{
		height:1
	}},
        { SPane:{
                title:"Exynos Core Control Interface"
        }},
	{ SSpacer:{
		height:1
	}},
        { SSeekBar:{
                title:"MAX CPU Cores",
                description:" Maximum number of online CPU Cores when screen is on.",
                default:`cat /sys/power/cpucore_max_num_limit`,
                action:"generic /sys/power/cpucore_max_num_limit",
		values:{
                        "1":"1 Core",
                        "2":"2 Core",
                        "3":"3 Core",
                        "4":"4 Core",
                        "5":"5 Core",
                        "6":"6 Core",
                        "7":"7 Core",
                        "8":"8 Core"
                }
        }},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:"PEWQ (Power-efficient Workqueues)",
		description:" Enable or disable PEWQ will help to reduce power consumption at the cost of slight performance overhead. By enabling this, PEWQ are used for unbound scheduled work to save load on sibling CPU cores and queuing work on CPU 0. Default is Disabled.",
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		default:`cat /sys/module/workqueue/parameters/power_efficient`,
		action:"generic /sys/module/workqueue/parameters/power_efficient",
		values:{
			N:"Disabled", Y:"Enabled"
		}
	}},
	{ SSpacer:{
		height:1
	}},
    ]
}
CTAG
